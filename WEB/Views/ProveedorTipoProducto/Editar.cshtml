@model ET.ProveedorTipoProducto
@{
    ViewBag.Title = "Editar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row bg-light p-3 mt-auto align-items-center text-center">
    <div class="row bg-light p-3 mt-auto align-items-center text-center">
        <div class="col-md-2">
            <a href="@Url.Action("Crear", "ProveedorTipoProducto")" class="btn btn-light">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-plus" viewBox="0 0 16 16">
                    <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                </svg>
                Enlazar
            </a>
        </div>
        <div class="col-md-2">
            <a href=" @Url.Action("Index", "ProveedorTipoProducto") " class="btn btn-light">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-file-earmark-plus" viewBox="0 0 16 16">
                    <path d="M8 6.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 .5-.5z" />
                    <path d="M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h-2z" />
                </svg>
                Lista
            </a>
        </div>
        <div class="col-md-2">
            <button class="btn btn-success">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-arrow-repeat" viewBox="0 0 16 16">
                    <path d="M11.534 7h3.932a.25.25 0 0 1 .192.41l-1.966 2.36a.25.25 0 0 1-.384 0l-1.966-2.36a.25.25 0 0 1 .192-.41zm-11 2h3.932a.25.25 0 0 0 .192-.41L2.692 6.23a.25.25 0 0 0-.384 0L.342 8.59A.25.25 0 0 0 .534 9z" />
                    <path fill-rule="evenodd"
                          d="M8 3c-1.552 0-2.94.707-3.857 1.818a.5.5 0 1 1-.771-.636A6.002 6.002 0 0 1 13.917 7H12.9A5.002 5.002 0 0 0 8 3zM3.1 9a5.002 5.002 0 0 0 8.757 2.182.5.5 0 1 1 .771.636A6.002 6.002 0 0 1 2.083 9H3.1z" />
                </svg>
                Actualizar
            </button>
        </div>
        <div class="col-md-2">
            <button class="btn btn-light disabled">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                     class="bi bi-x" viewBox="0 0 16 16">
                    <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                </svg>
                Eliminar
            </button>
        </div>

        <div class="col-md-2">
            <button type="button" class="btn btn-danger">Cerrar Sesion</button>
        </div>
    </div>
</div>

<div class="row">

    <h2 class="ms-4 mb-5">Editar Enlace Proveedor</h2>

</div>

@using (Html.BeginForm("Editar", "ProveedorTipoProducto", FormMethod.Post, new { id = "frmProveedorTipoProducto" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.idProveedorTipoProducto);
    <div class="row mt-5">

        <div class="col-1"></div>

        <div class="col-10">

            <div class="row mb-3">

                <div class="row mb-4">

                    <label for="colFormLabel" class="col-sm-3 col-form-label col-form-label fs-6">Proveedor *</label>
                    <div class="col-sm-3">
                        <select class="form-select" id="idProveedoresEditar" name="idProveedor">
                            <option value="">Escoger...</option>

                        </select>

                    </div>

                    <label for="colFormLabel" class="col-sm-3 col-form-label col-form-label fs-6">Tipo Producto *</label>
                    <div class="col-sm-3">
                        <select class="form-select" id="idTiposProductoEditar" name="idTipoProducto">
                            <option value="">Escoger...</option>

                        </select>

                    </div>
                </div>
            </div>

            <div class="row pt-3">
                <div class="offset-md-3 col-md-4">
                    <div class="d-grid gap-2">
                        <button id="btnEnviar" type="submit" value="Editar" class="btn btn-success">Editar</button>
                    </div>
                </div>

            </div>



        </div>

        <div class="col-1"></div>

    </div>
}


<!-- Toast -->

<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="liveToastCrear" class="toast fade hide" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">

            <svg class="bd-placeholder-img rounded me-2" width="20" height="20" xmlns="http://www.w3.org/2000/svg"
                 aria-hidden="true" preserveAspectRatio="xMidYMid slice" focusable="false">
                <rect width="100%" height="100%" fill="#007aff"></rect>
            </svg>

            <strong class="me-auto">Del sistema</strong>
            <small>Hace 3 seg</small>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close" onclick="CerrarToast()"></button>
        </div>
        <div id="toast-bodyCrearUM" class="toast-body">

        </div>
    </div>
</div>


@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script>

    function getProveedorSelected() {


        $.ajax({
            type: "GET",
            url: '/Proveedor/GetProveedores',
            dataType: "json",
            success: function (result) {
                $.each(result, function (key, item) {

                    if (@Model.idProveedor  == item.ID_Proveedor) {

                        $("#idProveedoresEditar").append('<option selected value=' + item.ID_Proveedor + '>' + item.DescripcionProveedor + '</option>');
                    } else {
                        $("#idProveedoresEditar").append('<option value=' + item.ID_Proveedor + '>' + item.DescripcionProveedor + '</option>');
                    }
                });
            },

            error: function (data, exception) {
                alert('error:' + data.responseText + "exception: " + exception);
            }
        });

    }

        getProveedorSelected()


    function getTipoProductoSelected() {


        $.ajax({
            type: "GET",
            url: '/TipoProducto/GetTiposProducto',
            dataType: "json",
            success: function (result) {
                $.each(result, function (key, item) {

                    if (@Model.idTipoProducto  == item.ID_TipoProducto) {

                        $("#idTiposProductoEditar").append('<option selected value=' + item.ID_TipoProducto + '>' + item.DescripcionTipoProducto + '</option>');
                    } else {
                        $("#idTiposProductoEditar").append('<option value=' + item.ID_TipoProducto + '>' + item.DescripcionTipoProducto + '</option>');
                    }
                });
            },

            error: function (data, exception) {
                alert('error:' + data.responseText + "exception: " + exception);
            }
        });

    }

        getTipoProductoSelected();

        $("#frmProveedorTipoProducto").submit(function (event) {

            event.preventDefault();
            debugger;

            //boton editar o crear
            var textoBoton = $("#btnEnviar").val();
            //variables
            var idProveedor = $("#idProveedoresEditar");

            if (idProveedor.children("option:selected")[0].innerText == "Escoger...") {
                var msg = "Faltan datos por agregar (*)";
                LlenarMensajeErrorToastCrearEditar(msg);

            } else { //todo bien
                debugger;
                var post_url = $(this).attr("action"); //get form action url, voy a almacenar el action que se va a ejecutar
                var request_method = $(this).attr("method"); //get form GET/POST method, el metodo que yo voy a ejecutar, el post
                var form_data = $(this).serializeArray(); //Encode form elements for submission, datos del formulario serializado, es el json
                console.log(form_data);
                debugger;

                $.ajax({
                    url: post_url,
                    type: request_method, //tipo del metodo
                    data: form_data //los datos recopilados
                }).done(function (response) {

                    if (response.ok == 1) {
                            if (textoBoton == "Editar") {
                                AgarrarDescripcionEnlaces('enlace',"actualizó", response.toRedirect);
                            }

                    } else if (response.ok == 2) {
                        var msg = "Ya existe un enlace con esos mismos datos";
                        EsconderMostrarToast(msg);
                    }
                    else {

                        var msg = response.msg

                        EsconderMostrarToast(msg)
                    }
                }).fail(function (data) {

                    var msg = "Ocurrio un error en el ajax";
                    LlenarMensajeErrorToastCrearEditar(msg)

                    alert(data.responseText);
                });

            }

        })


        function AgarrarDescripcionEnlaces(desc, crud, toRedirect) { //crud me refiero si es crear o editar nada mas

            MensajeToastIndex(desc, crud);

            window.location.href = toRedirect;
        }
    </script>
}